import os

class student:
    def __init__(self, name, age, roll, mark, grade):
        self.name = name
        self.age = age
        self.roll = roll
        self.mark = mark
        self.grade = grade

    def display(self):
        print(f"Name: {self.name}, Age: {self.age} Roll: {self.roll}, Mark: {self.mark}, Grade: {self.grade}")


    def update_contact(self, new_name, new_age, new_roll, new_mark, new_grade):
        self.name = new_name
        self.age = new_age
        self.roll = new_roll
        self.mark = new_mark
        self.grade = new_grade
    def get_contact(self):
        return f'Name: {self.name} Age: {self.age} Roll: {self.roll}, Mark: {self.mark}, Grade: {self.grade}'
    def save_contact(self):
        with open('contact.txt', 'w') as file:
            file.write(f"Name: {self.name}, Age: {self.age}, Roll: {self.mark}, Mark: {self.mark}, Grade: {self.grade}\n")
        return "Contact saved to contact.txt"
    
    def delete_contact(self):
        self.name = None
        self.age = None
        self.roll = None
        self.mark = None
        self.grade = None
        return "Contact deleted"
    

def main():
    print("This class manages student contact information.")
    print("It allows you to create, update, retrieve, save, and delete student contacts.")
    print("Use the methods provided to manage student data effectively.\n")
    

def input_student():
    name = input("Enter student name: ")
    age = int(input("Enter student age: "))
    roll = int(input("Enter student roll: "))
    mark = int(input("Enter student mark: "))
    grade = input("Enter student grade: ")

    return student(name, age, roll, mark, grade)
def show():
    print("1. Create Student Contact")
    print("2. Update Student Contact")
    print("3. Get Student Contact")
    print("4. Save Student Contact")
    print("5. Delete Student Contact")
    print("6. Sum Of All Students Contact")
    print("7. Average Of All Students Contact")
    print("8. Exit\n")

def main_menu():
    main()
    students =[]
    while True:
        user = input("Press Enter to continue...")
        print(user)
        if user.strip() != '':
             continue
        show()
        choice = input("Choose an option (1-6): ")
        
        if choice == '1':
            std = input_student()
            students.append(std)
            std.display()
        elif choice == '2':
            if 'std' in locals():
                new_name = input("Enter new name: ")
                new_age = int(input("Enter new age: "))
                new_roll = int(input("Enter new roll: "))
                new_mark = int(input("Enter new mark: "))
                new_grade = int(input("Enter new grade: "))
                students[-1].update_contact(new_name, new_age)
                print("Contact updated.")
            else:
                print("No student contact available to update.")
        elif choice == '3':

            if students:
                for s in students:
                   print(s.get_contact())

            else:
                print("No student contact available to retrieve.")
        elif choice == '4':
            if students:
                with open('contact.txt', 'a') as file:
                    for s in students:
                      file.write(s.get_contact() + "\n")
                print("\nContact saved to contact.txt")
            else:
                print("No student contact available to save.")
        elif choice == '5':
            if students:
                delt = students.pop()
                print(delt.get_contact())
                print("Last contact delete from the memory")

            else:
                print("No student contact available to delete.")
        elif choice == '6':
            if students:
               sums = sum(s.mark and s.roll and s.age for s in students)
               print(f"Total contact sum of all students: {sums}")
            else:
                print("Error")

        elif choice == '7':

          if students:

             total_marks = sum(s.mark and s.roll and s.age for s in students)
             avg = total_marks / len(students)
             print(f"Average of all student contact: {avg:.2f}")

          else:
            print("No student data available.")

        elif choice == '8':
            print("Exiting the program.")
            break
        else:
            print("Invalid choice. Please try again.")

main_menu()
